links:
    conditions:
        desc: Determines conditions for this function to be applied. If multiple conditions are specified, all must pass.
        type: list
        vals:
            id: predicates-10
            link: single_pred
    functions:
        type: list
        vals:
            id: item_modifiers-7
            link: single_modifier
    entry:
        type: object
        props:
            weight:
                desc: "Determines how often this entry is chosen out of all the entries in the pool. Entries with higher weights are used more often (chance is \"this entry's weight\"\u2044\"total of all considered entries' weights\")."
                type: integer
                min: 1
            quality:
                desc: Modifies the entry's weight based on the killing/opening/fishing player's luck attribute. Formula is floor( weight + (quality * generic.luck)).
                type: integer
                min: 0
            conditions:
                desc: Determines conditions for this entry to be used. If multiple conditions are specified, all must pass.
                link: conditions
            functions:
                desc: Applies functions to the item stack or item stacks being produced. Functions are applied in order, so for example looting_enchant must be after set_count to work correctly.
                link: functions
            type:
                desc: Namespaced ID type of entry. Can be "item" for item entries, "tag" for item tags, "loot_table" to produce items from another loot table, "group" for child entries, "alternatives" to select one sub-entry from a list, "sequence" to select sub-entries until one entry cannot be granted, "dynamic" to generate block specific drops, or "empty" for an entry that generates nothing.
                enum:
                  - minecraft:item
                  - minecraft:tag
                  - minecraft:loot_table
                  - minecraft:group
                  - minecraft:alternatives
                  - minecraft:sequence
                  - minecraft:dynamic
                  - minecraft:empty
                more:
                    string-minecraft:item:
                        name:
                            desc: ID name of the item to be produced, e.g. diamond. The default, if not changed by functions, is a stack of 1 of the default instance of the item.
                            href: https://minecraft.wiki/w/Java_Edition_data_values#Blocks
                            type: string
                            allow: '*a-z0-9_#\/:.-'
                    string-minecraft:tag:
                        name:
                            desc: Item tag to be used, e.g. arrows.
                            type: string
                            allow: '*a-z0-9_#\/:.-'
                        expand:
                            type: boolean
                    string-minecraft:loot_table:
                        name:
                            desc: Loot table to be used, e.g. gameplay/fishing/junk.
                            type: string
                            allow: '*a-z0-9_#\/:.-'
                    string-minecraft:group:
                        children:
                            desc: A list of entries that are used to generate loot. Can be used for convenience, e.g. if one condition applies for multiple entries.
                            type: list
                            vals:
                                link: entry
                    string-minecraft:alternatives:
                        children:
                            desc: A list of entries of which the first, and only the first, successful entry gets generated.
                            type: list
                            vals:
                                link: entry
                    string-minecraft:sequence:
                        children:
                            desc: A list of entries that are used until the first entry fails. After an entry fails, no more entries of this list are generated.
                            type: list
                            vals:
                                link: entry
                    string-minecraft:dynamic:
                        name:
                            desc: |
                                "contents" for block entity contents or "self" for banners and player skulls.
                            enum: [contents, self]
                    string-minecraft:empty: {}
type: object
props:
    type:
        desc: |
            Optional type of the loot table. Must be one of:
            "empty" if the loot table does not generate any loot,
            "entity" for loot an entity drops,
            "block" for loot a block drops,
            "chest" for a treasure chest,
            "fishing" for a fishing loot table,
            "gift" for a cat or villager gift,
            "advancement_reward" if it's used as a reward for an advancement,
            "barter" for loot from bartering with piglins,
            "command" for /execute,
            "selector" for predicate= in selectors,
            "advancement_entity" for entity predicates in advancements or
            "generic" if none of the above apply.
        enum:
          - minecraft:empty
          - minecraft:entity
          - minecraft:block
          - minecraft:chest
          - minecraft:fishing
          - minecraft:gift
          - minecraft:advancement_reward
          - minecraft:barter
          - minecraft:command
          - minecraft:selector
          - minecraft:advancement_entity
          - minecraft:generic
        default: minecraft:generic
    functions:
        desc: Applies functions to all item stacks produced by this table. Functions are applied in order, so for example looting_enchant must be after set_count to work correctly. I believe this is 1.17+ only.
        link: functions
    pools:
        desc: A list of all pools for this loot table. Each pool used generates items from its list of items based on the number of rolls. Pools are applied in order.
        type: list
        vals:
            type: object
            props:
                conditions:
                    desc: Determines conditions for this pool to be used. If multiple conditions are specified, all must pass.
                    link: conditions
                functions:
                    desc: Applies functions to all item stacks produced by this pool. Functions are applied in order, so for example looting_enchant must be after set_count to work correctly.
                    link: functions
                rolls:
                    desc: Specifies the number of rolls on the pool.
                    id: predicates-10
                    link: intprov
                bonus_rolls:
                    desc: Specifies the number of bonus rolls on the pool per point of luck. Rounded down after multiplying.
                    id: predicates-10
                    link: numprov
                entries:
                    desc: A list of all things that can be produced by this pool. One entry is chosen per roll as a weighted random selection from all entries without failing conditions.
                    type: list
                    vals:
                        link: entry
